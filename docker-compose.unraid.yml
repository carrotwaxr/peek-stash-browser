version: "3.8"

services:
  stash-player-db:
    image: postgres:15-alpine
    container_name: stash-player-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: stashplayer
      POSTGRES_USER: ${POSTGRES_USER:-stashuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-stashpass}
    volumes:
      - /mnt/user/appdata/stash-player/db:/var/lib/postgresql/data
    networks:
      - stash-player-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-stashuser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  stash-player-backend:
    image: your-dockerhub-username/stash-player-backend:latest # Replace with your image
    container_name: stash-player-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-stashuser}:${POSTGRES_PASSWORD:-stashpass}@stash-player-db:5432/stashplayer
      - STASH_URL=${STASH_URL}
      - STASH_API_KEY=${STASH_API_KEY}
      - NODE_ENV=production
    volumes:
      - /mnt/user/media:/app/media:ro # Mount your media directory (read-only)
      - /mnt/user/appdata/stash-player/tmp:/app/tmp
    depends_on:
      stash-player-db:
        condition: service_healthy
    networks:
      - stash-player-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8000/api/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  stash-player-frontend:
    image: your-dockerhub-username/stash-player-frontend:latest # Replace with your image
    container_name: stash-player-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      stash-player-backend:
        condition: service_healthy
    networks:
      - stash-player-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  stash-player-network:
    driver: bridge
# Optional: Add Traefik labels for reverse proxy if using
# labels:
#   - "traefik.enable=true"
#   - "traefik.http.routers.stash-player.rule=Host(`stash-player.local`)"
#   - "traefik.http.routers.stash-player.tls=true"
