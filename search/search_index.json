{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Peek Stash Browser","text":"<p>\u26a0\ufe0f BETA SOFTWARE - Currently in beta testing. Help us test!</p> <p>A modern web application for browsing and streaming your Stash adult content library with adaptive video streaming, playlists, and watch history tracking.</p> <ul> <li> <p> Beta Testing</p> <p>Help shape Peek by testing and providing feedback</p> <p> Testing Guide</p> </li> <li> <p> Quick Start</p> <p>Get up and running in minutes with Docker or unRAID</p> <p> Installation</p> </li> <li> <p> Configuration</p> <p>Set up Peek to connect with your Stash server</p> <p> Setup Guide</p> </li> <li> <p> Troubleshooting</p> <p>Common issues and solutions</p> <p> Get Help</p> </li> </ul>"},{"location":"#what-is-peek","title":"What is Peek?","text":"<p>Peek is a web-based browser for your Stash library, offering a sleek modern interface for browsing your \"documentary\" collection.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Adaptive Video Streaming - Real-time HLS transcoding with multiple quality options (720p/480p/360p)</li> <li>Watch History Tracking - Automatic progress tracking and resume playback</li> <li>Playlist Management - Create, organize, and play custom playlists</li> <li>Modern Interface - Responsive React UI with theme support</li> <li>Full Keyboard Navigation - Complete TV remote and keyboard control support</li> <li>Mobile Ready - Optimized for all devices</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#installation","title":"Installation","text":"DockerunRAID <pre><code>docker run -d \\\n  --name peek-stash-browser \\\n  -p 6969:80 \\\n  -v /path/to/stash/media:/app/media:ro \\\n  -v /path/to/peek/data:/app/data \\\n  -e STASH_URL=\"http://your-stash:9999/graphql\" \\\n  -e STASH_API_KEY=\"your_api_key\" \\\n  carrotwaxr/peek-stash-browser:latest\n</code></pre> <ol> <li>Open Community Applications</li> <li>Search for \"Peek Stash Browser\"</li> <li>Click Install and configure</li> <li>Access at <code>http://your-unraid-ip:6969</code></li> </ol>"},{"location":"#first-login","title":"First Login","text":"<p>Default Credentials:</p> <ul> <li>Username: <code>admin</code></li> <li>Password: <code>admin</code></li> </ul> <p>Change Default Password</p> <p>Immediately change your password after first login via Settings &gt; User Management</p>"},{"location":"#beta-testing","title":"Beta Testing","text":"<p>This is beta software. We need your help to make it great!</p> <p>How to help:</p> <ol> <li>Install and test - Follow the Installation Guide</li> <li>Test core features - See Beta Testing Guide for test scenarios</li> <li>Report bugs - GitHub Issues</li> <li>Request features - Open an issue with the \"enhancement\" label</li> <li>Provide feedback - What works? What's confusing?</li> </ol>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>Stash server with GraphQL API enabled</li> <li>Docker (or unRAID)</li> <li>Network access between Peek and Stash</li> <li>Shared media storage accessible to both containers</li> </ul>"},{"location":"#architecture","title":"Architecture","text":"<p>Peek uses a single-container architecture:</p> <ul> <li>Frontend: React 19 app served by nginx</li> <li>Backend: Node.js/Express API server (proxied through nginx)</li> <li>Database: SQLite (embedded, no separate container)</li> <li>Transcoding: FFmpeg for real-time video conversion</li> </ul>"},{"location":"#community-support","title":"Community &amp; Support","text":"<ul> <li>Bug Reports: GitHub Issues</li> <li>Feature Requests: GitHub Issues</li> <li>Stash Community: Discord - #third-party-integrations channel</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License.</p>"},{"location":"#acknowledgments","title":"Acknowledgments","text":"<p>Built with Stash, React, Express, FFmpeg, and other amazing open source projects.</p>"},{"location":"beta-testing/","title":"Beta Testing Guide","text":"<p>Thank you for helping test Peek! Your feedback is crucial for making this software stable and user-friendly.</p>"},{"location":"beta-testing/#important-notes","title":"\u26a0\ufe0f Important Notes","text":"<ul> <li>This is beta software - Expect bugs, crashes, and incomplete features</li> <li>Back up your Stash database before connecting Peek (Peek shouldn't modify Stash, but better safe than sorry)</li> <li>Don't use in production environments yet</li> </ul>"},{"location":"beta-testing/#getting-started","title":"Getting Started","text":""},{"location":"beta-testing/#1-installation","title":"1. Installation","text":"<p>Follow the Installation Guide to set up Peek with Docker or unRAID.</p>"},{"location":"beta-testing/#2-first-login","title":"2. First Login","text":"<p>Default Credentials: - Username: <code>admin</code> - Password: <code>admin</code></p> <p>\u26a0\ufe0f Change your password immediately via Settings &gt; User Management</p>"},{"location":"beta-testing/#3-verify-connection","title":"3. Verify Connection","text":"<p>After logging in, you should see content from your Stash library: - Scenes on the home page - Performers, Studios, and Tags in the sidebar</p> <p>If you don't see content, check the Troubleshooting Guide.</p>"},{"location":"beta-testing/#core-testing-scenarios","title":"Core Testing Scenarios","text":"<p>Please test these core functions and report any issues:</p>"},{"location":"beta-testing/#video-playback","title":"Video Playback","text":"<p>Test Direct Play: 1. Click any scene card 2. Video player should load 3. Click play - video should start immediately 4. Verify controls work (play/pause, seek, volume)</p> <p>Test Transcoding: 1. Open a scene with an unusual codec or high bitrate 2. Click the quality selector (gear icon) 3. Select \"720p\", \"480p\", or \"360p\" 4. Video should start transcoding and playing within 10-15 seconds</p> <p>Expected Issues: - Some videos may not transcode (codec incompatibility) - Seeking during transcoding may be slow - Quality switching may cause buffering</p> <p>Report if: - Video never starts playing - Player freezes or crashes - Audio/video desync - Severe buffering on local network</p>"},{"location":"beta-testing/#watch-history","title":"Watch History","text":"<p>Test Progress Tracking: 1. Start playing a scene 2. Watch for 30+ seconds 3. Seek to a different timestamp 4. Close the video 5. Reopen the same scene - it should offer to resume</p> <p>Test History View: 1. Navigate to Watch History (sidebar) 2. Verify recently watched scenes appear 3. Check resume times are accurate 4. Test filtering (All / In Progress)</p> <p>Report if: - Progress doesn't save - Resume times are incorrect - History doesn't update</p>"},{"location":"beta-testing/#playlists","title":"Playlists","text":"<p>Test Playlist Creation: 1. Go to Playlists (sidebar) &gt; Create Playlist 2. Enter a name and create 3. Browse scenes and click \"+ Playlist\" button on scene cards 4. Add multiple scenes to your playlist</p> <p>Test Playlist Playback: 1. Open your playlist 2. Click \"Play All\" 3. Video should start with playlist controls visible 4. Test Next/Previous buttons 5. Test shuffle and repeat modes</p> <p>Report if: - Can't create playlists - Can't add scenes to playlists - Playlist playback doesn't work - Next/Previous skips incorrectly</p>"},{"location":"beta-testing/#search-filtering","title":"Search &amp; Filtering","text":"<p>Test Scene Search: 1. Go to Scenes page 2. Enter a search term 3. Results should filter instantly 4. Try sorting (date, rating, duration, etc.) 5. Try pagination</p> <p>Test Performer/Studio/Tag Browsing: 1. Navigate to Performers, Studios, or Tags 2. Verify cards load with images/metadata 3. Click a card to view details 4. Verify related scenes appear</p> <p>Report if: - Search doesn't work - Sorting breaks pagination - Cards don't load - Detail pages show errors</p>"},{"location":"beta-testing/#keyboard-navigation-tv-mode","title":"Keyboard Navigation (TV Mode)","text":"<p>Test with Keyboard: 1. Use arrow keys to navigate scene grid 2. Press Enter to open a scene 3. Use arrow keys in video player for seeking 4. Test keyboard shortcuts (Space = play/pause, F = fullscreen)</p> <p>Report if: - Arrow keys don't navigate cards - Enter doesn't work - Video player controls don't respond to keyboard - Focus indicator missing or broken</p>"},{"location":"beta-testing/#reporting-bugs","title":"Reporting Bugs","text":"<p>When you find a bug, please open a GitHub issue with:</p>"},{"location":"beta-testing/#required-information","title":"Required Information","text":"<ol> <li>Title: Short, descriptive summary (e.g., \"Video won't play after seeking\")</li> <li>Description: What happened vs. what you expected</li> <li>Steps to Reproduce:    <pre><code>1. Click scene \"Example Scene\"\n2. Start playback\n3. Seek to 5:00\n4. Video stops and shows error\n</code></pre></li> <li>Environment:</li> <li>Peek version (e.g., <code>v0.1.0-beta</code>)</li> <li>Docker or unRAID</li> <li>Browser (Chrome, Firefox, Safari, etc.)</li> <li>Device (Desktop, tablet, TV)</li> </ol>"},{"location":"beta-testing/#helpful-extras","title":"Helpful Extras","text":"<ul> <li>Screenshots or screen recordings</li> <li>Browser console errors (F12 &gt; Console tab)</li> <li>Docker logs: <code>docker logs peek-stash-browser</code></li> <li>Network info: Local vs. remote access</li> </ul>"},{"location":"beta-testing/#example-bug-report","title":"Example Bug Report","text":"<pre><code>**Title:** Video freezes when switching quality during playback\n\n**Description:**\nWhen I change quality from Direct to 720p while the video is playing,\nthe player freezes and shows a black screen. Audio continues playing.\n\n**Steps to Reproduce:**\n1. Start playing any scene in Direct mode\n2. Let it play for 10+ seconds\n3. Click quality selector &gt; 720p\n4. Player freezes with black screen\n\n**Environment:**\n- Peek v0.1.0-beta\n- unRAID Docker\n- Chrome 120 on Windows 11\n- Local network (gigabit ethernet)\n\n**Console Errors:**\n`Failed to load segment: 404 Not Found`\n\n**Screenshot:** [attached]\n</code></pre>"},{"location":"beta-testing/#requesting-features","title":"Requesting Features","text":"<p>Have an idea for a new feature? Open an issue with the enhancement label:</p>"},{"location":"beta-testing/#feature-request-template","title":"Feature Request Template","text":"<pre><code>**Title:** Add bulk playlist operations\n\n**Problem:**\nCurrently I have to add scenes to playlists one at a time,\nwhich is tedious for large collections.\n\n**Proposed Solution:**\nAdd checkboxes to scene cards with \"Add Selected to Playlist\" button.\n\n**Alternatives:**\n- Right-click context menu\n- Keyboard shortcut for quick-add\n\n**Priority:**\nMedium - Nice to have but not urgent\n</code></pre>"},{"location":"beta-testing/#providing-feedback","title":"Providing Feedback","text":"<p>Beyond bugs and features, we'd love general feedback:</p> <ul> <li>What works well? What features do you love?</li> <li>What's confusing? UI unclear? Terminology wrong?</li> <li>What's missing? Essential features not yet implemented?</li> <li>Performance? How's the speed on your setup?</li> </ul> <p>Share feedback via: - GitHub Discussions - Stash Discord #third-party-integrations - Email: (if you provide one)</p>"},{"location":"beta-testing/#known-issues","title":"Known Issues","text":"<p>Current known issues (no need to report):</p> <ul> <li>\u2705 Transcoding may fail on some exotic codecs</li> <li>\u2705 Sprite sheet generation not yet implemented (using Stash's sprites)</li> <li>\u2705 Theme customization UI not yet available</li> <li>\u2705 Some keyboard shortcuts may conflict with browser shortcuts</li> <li>\u2705 Mobile video controls need refinement</li> <li>\u2705 No batch operations yet (coming soon)</li> </ul>"},{"location":"beta-testing/#beta-testing-checklist","title":"Beta Testing Checklist","text":"<p>Use this checklist to track your testing progress:</p> <ul> <li> Installation completed successfully</li> <li> Login with default credentials worked</li> <li> Changed default password</li> <li> Verified library content loads</li> <li> Tested direct video playback</li> <li> Tested transcoded playback (720p/480p/360p)</li> <li> Progress tracking saves and resumes correctly</li> <li> Created a playlist successfully</li> <li> Added scenes to playlist</li> <li> Played playlist with shuffle/repeat</li> <li> Scene search works</li> <li> Performer/Studio/Tag browsing works</li> <li> Keyboard navigation works (if applicable)</li> <li> Tested on mobile device (if applicable)</li> <li> Reported at least one bug or piece of feedback</li> </ul>"},{"location":"beta-testing/#thank-you","title":"Thank You!","text":"<p>Your time and feedback are incredibly valuable. Every bug report, feature request, and piece of feedback helps make Peek better for everyone.</p> <p>Happy testing! \ud83c\udf89</p>"},{"location":"getting-started/configuration/","title":"Configuration","text":"<p>Peek Stash Browser is configured through environment variables and the setup wizard. This page documents all available configuration options.</p>"},{"location":"getting-started/configuration/#required-environment-variables","title":"Required Environment Variables","text":"<p>These environment variables must be set for Peek to function:</p> Variable Description Example <code>STASH_URL</code> Your Stash GraphQL endpoint <code>http://192.168.1.100:9999/graphql</code> <code>STASH_API_KEY</code> API key from Stash settings <code>eyJhbGciOiJIUzI1NiIsInR5cCI6...</code> <code>JWT_SECRET</code> JWT signing key Generate with <code>openssl rand -base64 32</code>"},{"location":"getting-started/configuration/#getting-your-stash-api-key","title":"Getting Your Stash API Key","text":"<ol> <li>Open Stash web interface</li> <li>Navigate to Settings \u2192 Security</li> <li>In the API Key section, click Generate</li> <li>Copy the generated key</li> <li>Use this key as <code>STASH_API_KEY</code></li> </ol>"},{"location":"getting-started/configuration/#generating-jwt-secret","title":"Generating JWT Secret","text":"<p>Linux/macOS/unRAID: <pre><code>openssl rand -base64 32\n</code></pre></p> <p>Windows PowerShell: <pre><code>$rng = [System.Security.Cryptography.RandomNumberGenerator]::Create()\n$bytes = New-Object byte[] 32\n$rng.GetBytes($bytes)\n[Convert]::ToBase64String($bytes)\n</code></pre></p>"},{"location":"getting-started/configuration/#optional-environment-variables","title":"Optional Environment Variables","text":"<p>These settings have sensible defaults but can be customized:</p> Variable Description Default Notes <code>DATABASE_URL</code> SQLite database file <code>file:/app/data/peek-stash-browser.db</code> Path inside container <code>CONFIG_DIR</code> App data directory <code>/app/data</code> Database + HLS cache <code>TMP_DIR</code> Transcoding temp directory <code>/app/tmp</code> Needs fast I/O <code>NODE_ENV</code> Environment mode <code>production</code> <code>development</code> or <code>production</code>"},{"location":"getting-started/configuration/#path-mapping","title":"Path Mapping","text":"<p>Peek needs to access the same media files that Stash manages. There are two ways to configure path mappings:</p>"},{"location":"getting-started/configuration/#setup-wizard-recommended","title":"Setup Wizard (Recommended)","text":"<p>The 5-step setup wizard is the recommended way to configure path mappings for new installations:</p> <ol> <li>Auto-Discovery: Peek queries your Stash server via GraphQL to discover all library paths</li> <li>Path Mapping: You map each Stash library path to where Peek can access it in the container</li> <li>Database Storage: Mappings are stored in the database (no environment variables needed)</li> <li>Path Validation: Test each path to ensure Peek can access the files</li> <li>Multi-Library Support: Configure multiple library paths (videos, images, etc.)</li> </ol> <p>Access the wizard: - First-time installations show the wizard automatically at <code>http://your-server:6969</code> - Existing installations can manage mappings in Settings \u2192 Path Mappings</p>"},{"location":"getting-started/configuration/#upgrading-from-environment-variables","title":"Upgrading from Environment Variables","text":"<p>If you have an existing installation using <code>STASH_INTERNAL_PATH</code> and <code>STASH_MEDIA_PATH</code> environment variables:</p> <ol> <li>Access Peek in your browser</li> <li>Complete the setup wizard - it will guide you through path mapping</li> <li>Remove old environment variables from your container configuration:</li> <li><code>STASH_INTERNAL_PATH</code></li> <li><code>STASH_MEDIA_PATH</code></li> <li>Restart container</li> </ol> <p>The setup wizard replaces these environment variables with database-stored mappings that support multiple libraries.</p>"},{"location":"getting-started/configuration/#path-mapping-example","title":"Path Mapping Example","text":"<p>Setup: <pre><code># Stash Docker container\nvolumes:\n  - /mnt/user/videos:/data\n\n# Peek Docker container\nvolumes:\n  - /mnt/user/videos:/app/media:ro\n</code></pre></p> <p>In Setup Wizard: - Stash reports library path: <code>/data</code> - You configure Peek path: <code>/app/media</code> - Peek translates <code>/data/scenes/video.mp4</code> \u2192 <code>/app/media/scenes/video.mp4</code></p> <p>Multiple Libraries Example: <pre><code># Stash has two libraries: /data and /images\n# Peek Docker container\nvolumes:\n  - /mnt/user/stash/videos:/app/media:ro\n  - /mnt/user/stash/images:/app/images:ro\n</code></pre></p> <p>In Setup Wizard: - Library 1: <code>/data</code> \u2192 <code>/app/media</code> - Library 2: <code>/images</code> \u2192 <code>/app/images</code></p>"},{"location":"getting-started/configuration/#security-settings","title":"Security Settings","text":"Variable Description Default When to Use <code>SECURE_COOKIES</code> Enable secure cookie flag <code>false</code> Set to <code>true</code> when using HTTPS reverse proxy <p>Security Best Practices</p> <ul> <li>Set a strong <code>JWT_SECRET</code> during installation (required)</li> <li>Set <code>SECURE_COOKIES=true</code> when using HTTPS</li> <li>Don't expose Peek directly to the internet without a reverse proxy</li> <li>Admin credentials are created during setup wizard (no default passwords)</li> </ul>"},{"location":"getting-started/configuration/#example-configurations","title":"Example Configurations","text":""},{"location":"getting-started/configuration/#minimal-production-configuration","title":"Minimal Production Configuration","text":"<pre><code># Required\nSTASH_URL=http://192.168.1.100:9999/graphql\nSTASH_API_KEY=your_api_key_here\nJWT_SECRET=your_very_long_random_secret_key_here\n\n# Path mappings configured via setup wizard (stored in database)\n# All other settings use defaults\n</code></pre>"},{"location":"getting-started/configuration/#complete-production-configuration","title":"Complete Production Configuration","text":"<pre><code># Stash Integration (Required)\nSTASH_URL=http://192.168.1.100:9999/graphql\nSTASH_API_KEY=your_api_key_here\nJWT_SECRET=your_very_long_random_secret_key_here\n\n# Database (Optional - defaults shown)\nDATABASE_URL=file:/app/data/peek-stash-browser.db\nCONFIG_DIR=/app/data\n\n# Storage (Optional)\nTMP_DIR=/app/tmp\n\n# Security (Optional)\nSECURE_COOKIES=true\n\n# Environment (Optional)\nNODE_ENV=production\n\n# Path mappings configured via setup wizard (stored in database)\n</code></pre>"},{"location":"getting-started/configuration/#development-configuration","title":"Development Configuration","text":"<pre><code># Stash Integration\nSTASH_URL=http://localhost:9999/graphql\nSTASH_API_KEY=your_development_api_key\nJWT_SECRET=dev-secret-change-in-production\n\n# Database (local SQLite file)\nDATABASE_URL=file:./data/peek-db.db\n\n# Development\nNODE_ENV=development\n\n# Path mappings configured via setup wizard\n</code></pre>"},{"location":"getting-started/configuration/#docker-compose-example","title":"Docker Compose Example","text":"<pre><code>services:\n  peek:\n    image: carrotwaxr/peek-stash-browser:latest\n    container_name: peek-stash-browser\n    ports:\n      - \"6969:80\"\n    volumes:\n      - /mnt/user/videos:/app/media:ro\n      - peek-data:/app/data\n    environment:\n      # Required\n      - STASH_URL=http://stash:9999/graphql\n      - STASH_API_KEY=${STASH_API_KEY}\n      - JWT_SECRET=${JWT_SECRET}\n\n      # Optional\n      - NODE_ENV=production\n      - SECURE_COOKIES=false\n    restart: unless-stopped\n\nvolumes:\n  peek-data:\n</code></pre> <p>Path Mappings</p> <p>Path mappings are configured via the setup wizard and stored in the database (in the <code>peek-data</code> volume). No environment variables needed!</p>"},{"location":"getting-started/configuration/#troubleshooting-configuration-issues","title":"Troubleshooting Configuration Issues","text":""},{"location":"getting-started/configuration/#cannot-connect-to-stash","title":"Cannot Connect to Stash","text":"<p>Check:</p> <ul> <li><code>STASH_URL</code> is accessible from the Peek container</li> <li><code>STASH_API_KEY</code> is correct and not expired</li> <li>Stash GraphQL API is enabled</li> </ul> <p>Test connectivity:</p> <pre><code>docker exec peek-stash-browser curl http://your-stash-ip:9999/graphql\n</code></pre>"},{"location":"getting-started/configuration/#videos-wont-play","title":"Videos Won't Play","text":"<p>Check:</p> <ul> <li>Media volume is mounted correctly to container</li> <li>Path mappings are configured correctly in Settings \u2192 Path Mappings</li> <li>File permissions allow reading (use <code>:ro</code> for read-only mounts)</li> </ul> <p>Verify path mapping:</p> <pre><code># Check if media is accessible in container\ndocker exec peek-stash-browser ls -la /app/media\n\n# Check path mappings in database\ndocker exec peek-stash-browser cat /app/data/peek-stash-browser.db\n</code></pre> <p>Use the \"Test Path\" button in Settings \u2192 Path Mappings to verify each path.</p>"},{"location":"getting-started/configuration/#authentication-issues","title":"Authentication Issues","text":"<p>Check:</p> <ul> <li><code>JWT_SECRET</code> is set</li> <li><code>SECURE_COOKIES</code> matches your HTTP/HTTPS setup</li> <li>Database is writable</li> </ul>"},{"location":"getting-started/configuration/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start Guide</li> <li>Troubleshooting</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":"<p>Peek Stash Browser can be deployed in several ways depending on your needs and environment.</p>"},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<p>Before installing Peek, ensure you have:</p> <ul> <li>Stash Server running with GraphQL API enabled</li> <li>Docker installed (Docker Compose only needed for development)</li> <li>Network access from container to Stash server</li> <li>Storage space for SQLite database and transcoding temp files</li> </ul>"},{"location":"getting-started/installation/#stash-configuration","title":"Stash Configuration","text":"<ol> <li>Enable API in Stash settings</li> <li>Generate API key in Settings \u2192 Security</li> <li>Note GraphQL endpoint (usually <code>http://stash-ip:9999/graphql</code>)</li> <li>Ensure network access from your Docker host to Stash</li> </ol>"},{"location":"getting-started/installation/#understanding-path-mapping","title":"Understanding Path Mapping","text":"<p>Peek needs to access the same media files that Stash manages. How you configure this depends on your setup:</p>"},{"location":"getting-started/installation/#scenario-1-peek-and-stash-on-same-machine","title":"Scenario 1: Peek and Stash on Same Machine","text":"<p>Example: Both running in Docker on the same host</p> <pre><code># Simple - just mount the same directory both containers use (read-only recommended)\n-v /mnt/media:/app/media:ro\n</code></pre>"},{"location":"getting-started/installation/#scenario-2-peek-on-windows-stash-on-network-server","title":"Scenario 2: Peek on Windows, Stash on Network Server","text":"<p>Example: Stash on unRAID/NAS, Peek on Windows desktop</p> <p>If your network shares are password-protected, use Docker volumes:</p> <pre><code># One-time: Create Docker volume for password-protected SMB share\ndocker volume create peek-media `\n  --driver local `\n  --opt type=cifs `\n  --opt device=//192.168.1.100/media `\n  --opt o=username=youruser,password=yourpass\n\n# Then use the volume in docker run (read-only recommended)\n-v peek-media:/app/media:ro\n</code></pre> <p>See Windows Installation Examples below for complete examples.</p>"},{"location":"getting-started/installation/#scenario-3-multiple-stash-libraries","title":"Scenario 3: Multiple Stash Libraries","text":"<p>Example: Stash has separate folders for videos and images</p> <p>The setup wizard will auto-discover all your Stash libraries and help you map each one:</p> <ul> <li><code>/data</code> (videos) \u2192 <code>/app/media</code></li> <li><code>/images</code> (images) \u2192 <code>/app/images</code></li> </ul>"},{"location":"getting-started/installation/#installation-methods","title":"Installation Methods","text":""},{"location":"getting-started/installation/#option-1-unraid","title":"Option 1: unRAID","text":""},{"location":"getting-started/installation/#community-applications-recommended","title":"Community Applications (Recommended)","text":"<p>Easiest Installation Method</p> <p>This is the recommended method for unRAID users - everything is pre-configured!</p> <ol> <li>Install from Community Applications:</li> <li>Search for \"Peek Stash Browser\" in unRAID's Community Applications</li> <li>Click install and configure your settings</li> <li>Access at <code>http://your-unraid-ip:6969</code></li> </ol>"},{"location":"getting-started/installation/#manual-template-installation","title":"Manual Template Installation","text":"<p>If Peek isn't available in Community Applications yet, or if you want to install the latest template manually:</p> <p>Step 1: Download the template file</p> <p>Get the template from GitHub:</p> <pre><code>https://raw.githubusercontent.com/carrotwaxr/peek-stash-browser/master/unraid-template.xml\n</code></pre> <p>Step 2: Install the template</p> <p>=== \"USB/Boot Share Exported (Easier)\" 1. Copy <code>unraid-template.xml</code> to your network share at: <code>\\\\your.server.ip.address\\flash\\config\\plugins\\dockerMan\\templates-user</code> 2. The template will be available immediately in Docker tab \u2192 Add Container \u2192 User Templates</p> <p>=== \"USB/Boot Share NOT Exported\" 1. Copy <code>unraid-template.xml</code> to any accessible share (e.g., <code>\\\\your.server.ip.address\\downloads</code>) 2. SSH into your unRAID server 3. Move the template file: <code>bash        cp /mnt/user/downloads/unraid-template.xml /boot/config/plugins/dockerMan/templates-user/</code> 4. The template will be available immediately in Docker tab \u2192 Add Container \u2192 User Templates</p> <p>No Restart Required</p> <p>You do NOT need to restart Docker or unRAID - the template is picked up automatically.</p> <p>Step 3: Configure the container</p> <ol> <li>Go to Docker tab \u2192 Add Container</li> <li>Select \"peek-stash-browser\" from User Templates dropdown</li> <li>Configure required settings:</li> <li>Stash GraphQL URL: <code>http://your-unraid-ip:9999/graphql</code></li> <li>Stash API Key: Get from Stash Settings \u2192 Security</li> <li>JWT Secret: Generate with <code>openssl rand -hex 32</code> in unRAID terminal</li> <li>Media Directory: Path to your Stash media (e.g., <code>/mnt/user/videos</code>)</li> <li>App Data Directory: Path for Peek data (e.g., <code>/mnt/user/appdata/peek-stash-browser</code>)</li> <li>Click Apply</li> <li>Access at <code>http://your-unraid-ip:6969</code></li> </ol>"},{"location":"getting-started/installation/#option-2-docker-single-container","title":"Option 2: Docker (Single Container)","text":"<p>Recommended for Production</p> <p>Single container includes everything - frontend, backend, and database</p> <pre><code># Pull the latest image\ndocker pull carrotwaxr/peek-stash-browser:latest\n\n# Generate JWT secret\nexport JWT_SECRET=$(openssl rand -base64 32)\n\n# Run with single library\ndocker run -d \\\n  --name peek-stash-browser \\\n  -p 6969:80 \\\n  -v /path/to/your/media:/app/media:ro \\\n  -v peek-data:/app/data \\\n  -e STASH_URL=\"http://your-stash-server:9999/graphql\" \\\n  -e STASH_API_KEY=\"your_stash_api_key\" \\\n  -e JWT_SECRET=\"${JWT_SECRET}\" \\\n  carrotwaxr/peek-stash-browser:latest\n\n# Run with multiple libraries (if Stash has separate video/image libraries)\ndocker run -d \\\n  --name peek-stash-browser \\\n  -p 6969:80 \\\n  -v /path/to/stash/videos:/app/media:ro \\\n  -v /path/to/stash/images:/app/images:ro \\\n  -v /path/to/stash/other:/app/other:ro \\\n  -v peek-data:/app/data \\\n  -e STASH_URL=\"http://your-stash-server:9999/graphql\" \\\n  -e STASH_API_KEY=\"your_stash_api_key\" \\\n  -e JWT_SECRET=\"${JWT_SECRET}\" \\\n  carrotwaxr/peek-stash-browser:latest\n</code></pre> <p>Volume Mounts:</p> <ul> <li><code>/path/to/your/media</code> - Your media files (read-only recommended with <code>:ro</code>)</li> <li><code>peek-data</code> - Database and app data (Docker named volume)</li> </ul> <p>Multiple Libraries</p> <p>If Stash has multiple library paths, mount each one separately. The setup wizard will auto-discover them and help you configure the mappings.</p> <p>Required Environment Variables:</p> <ul> <li><code>STASH_URL</code> - Your Stash GraphQL endpoint</li> <li><code>STASH_API_KEY</code> - API key from Stash settings</li> <li><code>JWT_SECRET</code> - Secret for JWT authentication (recommended to set manually)</li> </ul> <p>See Configuration Guide for all environment variables.</p>"},{"location":"getting-started/installation/#windows-examples","title":"Windows Examples","text":"<p>Windows users with network shares (SMB/CIFS) need special configuration for password-protected shares.</p> <p>Windows Network Shares</p> <p>Docker Desktop on Windows cannot directly mount password-protected network shares using drive letters (Z:, X:, etc.). Use Docker volumes with CIFS credentials instead.</p> <p>Step 1: Find your UNC path</p> <p>If you have a mapped drive, find its UNC path:</p> <pre><code># In PowerShell\nnet use Z:\n# Look for \"Remote name\" in the output (e.g., \\\\192.168.1.100\\media)\n</code></pre> <p>Step 2: Create Docker volumes (one-time setup)</p> <pre><code># Pull the latest image from Docker Hub\ndocker pull carrotwaxr/peek-stash-browser:latest\n\n# Generate JWT secret (one-time)\n$rng = [System.Security.Cryptography.RandomNumberGenerator]::Create()\n$bytes = New-Object byte[] 32\n$rng.GetBytes($bytes)\n$jwt = [Convert]::ToBase64String($bytes)\n\n# For single library:\ndocker volume create peek-media `\n  --driver local `\n  --opt type=cifs `\n  --opt device=//192.168.1.100/stash `\n  --opt o=username=youruser,password=yourpass\n\n# For multiple libraries (create one volume per library):\ndocker volume create peek-videos `\n  --driver local `\n  --opt type=cifs `\n  --opt device=//192.168.1.100/stash/videos `\n  --opt o=username=youruser,password=yourpass\n\ndocker volume create peek-images `\n  --driver local `\n  --opt type=cifs `\n  --opt device=//192.168.1.100/stash/images `\n  --opt o=username=youruser,password=yourpass\n\n# Create volume for Peek data (persists database)\ndocker volume create peek-data\n</code></pre> <p>Volumes persist across reboots!</p> <p>These volumes are created once and survive container restarts, system reboots, and Docker Desktop restarts.</p> <p>Step 3: Run Peek container</p> <pre><code># Single library\ndocker run -d `\n    --name peek-stash-browser `\n    -p 6969:80 `\n    -v peek-media:/app/media:ro `\n    -v peek-data:/app/data `\n    -e STASH_URL=http://192.168.1.100:9999/graphql `\n    -e STASH_API_KEY=your_api_key_here `\n    -e JWT_SECRET=$jwt `\n    carrotwaxr/peek-stash-browser:latest\n\n# Multiple libraries\ndocker run -d `\n    --name peek-stash-browser `\n    -p 6969:80 `\n    -v peek-videos:/app/media:ro `\n    -v peek-images:/app/images:ro `\n    -v peek-data:/app/data `\n    -e STASH_URL=http://192.168.1.100:9999/graphql `\n    -e STASH_API_KEY=your_api_key_here `\n    -e JWT_SECRET=$jwt `\n    carrotwaxr/peek-stash-browser:latest\n</code></pre> <p>Multiple Libraries</p> <p>Create one Docker volume for each Stash library path. Media volumes are mounted read-only (<code>:ro</code>) to prevent accidental modifications. The setup wizard will auto-discover all libraries and help you map them.</p> <p>Managing the container:</p> <pre><code># View logs\ndocker logs peek-stash-browser\n\n# Stop container\ndocker stop peek-stash-browser\n\n# Start container\ndocker start peek-stash-browser\n\n# Restart container\ndocker restart peek-stash-browser\n\n# Update to new version\ndocker stop peek-stash-browser\ndocker rm peek-stash-browser\ndocker pull carrotwaxr/peek-stash-browser:latest\n# Then re-run the docker run command above\n</code></pre> <p>Volumes are preserved!</p> <p>Your database and configuration are saved in the <code>peek-data</code> volume and won't be lost when updating.</p>"},{"location":"getting-started/installation/#linuxmacos-examples","title":"Linux/macOS Examples","text":"<p>Linux and macOS users can mount directories directly without the complexity of network share authentication.</p> <p>Step 1: Pull image and generate JWT secret</p> <pre><code># Pull the latest image from Docker Hub\ndocker pull carrotwaxr/peek-stash-browser:latest\n\n# Generate a secure random JWT secret\nexport JWT_SECRET=$(openssl rand -base64 32)\n</code></pre> <p>Step 2: Run Peek container</p> <pre><code># Single Stash library\ndocker run -d \\\n    --name peek-stash-browser \\\n    -p 6969:80 \\\n    -v /path/to/stash/media:/app/media:ro \\\n    -v peek-data:/app/data \\\n    -e STASH_URL=http://192.168.1.100:9999/graphql \\\n    -e STASH_API_KEY=your_api_key_here \\\n    -e JWT_SECRET=\"${JWT_SECRET}\" \\\n    carrotwaxr/peek-stash-browser:latest\n\n# Multiple Stash libraries (videos + images + other)\ndocker run -d \\\n    --name peek-stash-browser \\\n    -p 6969:80 \\\n    -v /path/to/stash/videos:/app/media:ro \\\n    -v /path/to/stash/images:/app/images:ro \\\n    -v /path/to/stash/other:/app/other:ro \\\n    -v peek-data:/app/data \\\n    -e STASH_URL=http://192.168.1.100:9999/graphql \\\n    -e STASH_API_KEY=your_api_key_here \\\n    -e JWT_SECRET=\"${JWT_SECRET}\" \\\n    carrotwaxr/peek-stash-browser:latest\n</code></pre> <p>Read-only mounts recommended</p> <p>Use <code>:ro</code> flag on media mounts to prevent accidental modifications to your Stash library</p> <p>Multiple Libraries</p> <p>Mount each Stash library path separately. The setup wizard will auto-discover all libraries and help you map them.</p> <p>Managing the container:</p> <pre><code># View logs\ndocker logs peek-stash-browser\n\n# Follow logs in real-time\ndocker logs -f peek-stash-browser\n\n# Stop container\ndocker stop peek-stash-browser\n\n# Start container\ndocker start peek-stash-browser\n\n# Restart container\ndocker restart peek-stash-browser\n\n# Update to new version\ndocker stop peek-stash-browser\ndocker rm peek-stash-browser\ndocker pull carrotwaxr/peek-stash-browser:latest\n# Then re-run the docker run command above\n</code></pre> <p>Data persists across updates!</p> <p>Your database and configuration are saved in the <code>peek-data</code> volume and won't be lost when updating.</p>"},{"location":"getting-started/installation/#option-3-docker-compose-development","title":"Option 3: Docker Compose (Development)","text":"<p>For Development Only</p> <p>This method is for development with hot reloading enabled</p> <ol> <li>Clone and setup:</li> </ol> <pre><code>git clone https://github.com/carrotwaxr/peek-stash-browser.git\ncd peek-stash-browser\ncp .env.example .env\n</code></pre> <ol> <li>Configure environment (edit <code>.env</code>):</li> </ol> <pre><code>STASH_URL=http://your-stash-server:9999/graphql\nSTASH_API_KEY=your_stash_api_key\nDATABASE_URL=file:./data/peek-stash-browser.db\nTMP_DIR=/path/to/temp/directory\n</code></pre> <ol> <li>Start services:</li> </ol> <pre><code>docker-compose up -d\n</code></pre> <ol> <li>Access the app: Open <code>http://localhost:6969</code></li> </ol>"},{"location":"getting-started/installation/#first-access-setup-wizard","title":"First Access &amp; Setup Wizard","text":"<p>After installation, access Peek in your browser for the first-time setup:</p> <ol> <li>Navigate to <code>http://localhost:6969</code> (or your server IP)</li> <li>Complete the 5-step setup wizard:</li> <li>Welcome: Introduction to Peek</li> <li>Discover Libraries: Auto-discover Stash library paths</li> <li>Configure Paths: Map Stash paths to Peek container paths</li> <li>Create Admin: Set your admin password</li> <li>Complete: Setup finished!</li> <li>Login with your newly created admin credentials</li> </ol> <p>Path Mapping Made Easy</p> <p>The wizard auto-discovers your Stash library paths and helps you map them correctly!</p>"},{"location":"getting-started/installation/#updating-peek","title":"Updating Peek","text":""},{"location":"getting-started/installation/#check-for-updates","title":"Check for Updates","text":"<p>Peek includes a built-in update checker:</p> <ol> <li>Navigate to Settings \u2192 Server Settings</li> <li>Scroll to the Version Information section</li> <li>Click Check for Updates</li> </ol> <p>The system will query GitHub for new releases and notify you if an update is available.</p>"},{"location":"getting-started/installation/#update-procedure","title":"Update Procedure","text":"<p>To update your Docker container to the latest version:</p> unRAIDLinux/macOSWindows <p>Easiest method: Click Force Update in the Docker tab to pull the latest image and restart.</p> <pre><code># Stop and remove current container\ndocker stop peek-stash-browser\ndocker rm peek-stash-browser\n\n# Pull latest image\ndocker pull carrotwaxr/peek-stash-browser:latest\n\n# Restart with same docker run command you used for installation\ndocker run -d \\\n  --name peek-stash-browser \\\n  -p 6969:80 \\\n  -v /path/to/stash/media:/app/media:ro \\\n  -v peek-data:/app/data \\\n  -e STASH_URL=http://192.168.1.100:9999/graphql \\\n  -e STASH_API_KEY=your_api_key_here \\\n  -e JWT_SECRET=\"${JWT_SECRET}\" \\\n  carrotwaxr/peek-stash-browser:latest\n</code></pre> <pre><code># Stop and remove current container\ndocker stop peek-stash-browser\ndocker rm peek-stash-browser\n\n# Pull latest image\ndocker pull carrotwaxr/peek-stash-browser:latest\n\n# Restart with same docker run command you used for installation\ndocker run -d `\n  --name peek-stash-browser `\n  -p 6969:80 `\n  -v peek-media:/app/media:ro `\n  -v peek-data:/app/data `\n  -e STASH_URL=http://192.168.1.100:9999/graphql `\n  -e STASH_API_KEY=your_api_key_here `\n  -e JWT_SECRET=$jwt `\n  carrotwaxr/peek-stash-browser:latest\n</code></pre> <p>Your data persists across updates</p> <p>Database, user settings, path mappings, and playlists are stored in the <code>peek-data</code> volume and will not be lost.</p>"},{"location":"getting-started/installation/#version-pinning","title":"Version Pinning","text":"<p>To use a specific version instead of <code>:latest</code>:</p> <pre><code># Pull and use specific version\ndocker pull carrotwaxr/peek-stash-browser:1.0.0\ndocker run ... carrotwaxr/peek-stash-browser:1.0.0\n</code></pre> <p>Available versions: GitHub Releases</p>"},{"location":"getting-started/installation/#port-configuration","title":"Port Configuration","text":"Environment Port Service Description Production <code>6969</code> Complete App nginx serves frontend + proxies API Development <code>6969</code> Frontend UI Vite dev server with hot reloading Development <code>8000</code> Backend API Express server (internal Docker network) <p>Production uses only one port!</p> <p>Production deployment exposes only port <code>6969</code> - nginx handles everything internally</p>"},{"location":"getting-started/installation/#hardware-recommendations","title":"Hardware Recommendations","text":"Component Minimum Recommended CPU 2 cores 4+ cores (for multiple transcoding streams) RAM 2GB 4GB+ Storage SSD for database SSD for database, network storage for media Network 100 Mbps Gigabit (for 4K content)"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ul> <li>Configure environment variables</li> <li>Quick Start Guide</li> <li>Troubleshooting</li> </ul>"},{"location":"getting-started/quick-start/","title":"Quick Start","text":"<p>Get Peek up and running in 5 minutes!</p>"},{"location":"getting-started/quick-start/#step-1-install-peek","title":"Step 1: Install Peek","text":"Docker (Fastest)unRAIDDocker Compose <pre><code># Pull the latest image\ndocker pull carrotwaxr/peek-stash-browser:latest\n\n# Generate JWT secret\nexport JWT_SECRET=$(openssl rand -base64 32)\n\n# Run Peek\ndocker run -d \\\n  --name peek-stash-browser \\\n  -p 6969:80 \\\n  -v /path/to/media:/app/media:ro \\\n  -v peek-data:/app/data \\\n  -e STASH_URL=\"http://your-stash:9999/graphql\" \\\n  -e STASH_API_KEY=\"your_api_key\" \\\n  -e JWT_SECRET=\"${JWT_SECRET}\" \\\n  carrotwaxr/peek-stash-browser:latest\n</code></pre> <ol> <li>Search \"Peek Stash Browser\" in Community Applications</li> <li>Click Install</li> <li>Configure Stash URL and API key</li> <li>Generate JWT secret: <code>openssl rand -hex 32</code></li> <li>Click Apply</li> </ol> <pre><code>git clone https://github.com/carrotwaxr/peek-stash-browser.git\ncd peek-stash-browser\ncp .env.example .env\n# Edit .env with your settings\ndocker-compose up -d\n</code></pre>"},{"location":"getting-started/quick-start/#step-2-setup-wizard","title":"Step 2: Setup Wizard","text":"<ol> <li>Open browser: <code>http://localhost:6969</code> (or your server IP)</li> <li>Complete the 5-step setup wizard:</li> <li>Welcome - Introduction to Peek</li> <li>Discover Libraries - Auto-discover your Stash library paths</li> <li>Configure Paths - Map Stash paths to Peek container paths</li> <li>Create Admin - Set your admin username and password</li> <li>Complete - Setup finished!</li> </ol> <p>Path Mapping Made Easy</p> <p>The wizard automatically discovers your Stash libraries and helps you configure path mappings correctly!</p>"},{"location":"getting-started/quick-start/#step-3-browse-your-library","title":"Step 3: Browse Your Library","text":"<ul> <li>Scenes: Browse all your video content</li> <li>Performers: View performers and their scenes</li> <li>Studios: Explore by production company</li> <li>Tags: Find content by tags</li> </ul>"},{"location":"getting-started/quick-start/#step-4-watch-videos","title":"Step 4: Watch Videos","text":"<ol> <li>Click any scene to view details</li> <li>Click Play to start video</li> <li>Quality automatically adjusts based on network</li> <li>Use timeline to seek through video</li> </ol>"},{"location":"getting-started/quick-start/#step-5-create-playlists","title":"Step 5: Create Playlists","text":"<ol> <li>Click Playlists in navigation</li> <li>Click Create Playlist</li> <li>Enter name and description</li> <li>Add scenes by clicking the + icon on any scene</li> <li>Play your playlist with shuffle/repeat options!</li> </ol>"},{"location":"getting-started/quick-start/#common-tasks","title":"Common Tasks","text":""},{"location":"getting-started/quick-start/#update-admin-password","title":"Update Admin Password","text":"<ol> <li>Click user icon (top right)</li> <li>Select Settings</li> <li>Enter new password</li> <li>Click Save</li> </ol>"},{"location":"getting-started/quick-start/#create-additional-users","title":"Create Additional Users","text":"<ol> <li>Go to Users (admin only)</li> <li>Click Create User</li> <li>Enter username, email, password</li> <li>Select role (Admin or User)</li> <li>Click Create</li> </ol>"},{"location":"getting-started/quick-start/#configure-theme","title":"Configure Theme","text":"<ol> <li>Click theme toggle icon (moon/sun)</li> <li>Choose Dark or Light mode</li> <li>Theme preference is saved automatically</li> </ol>"},{"location":"getting-started/quick-start/#video-playback-tips","title":"Video Playback Tips","text":"<ul> <li>Direct Play: If browser supports the format, plays directly (no transcoding)</li> <li>Transcoded: HLS streaming with adaptive quality when needed</li> <li>Seeking: Full timeline scrubbing works in both modes</li> <li>Quality: Click quality button to manually select resolution</li> </ul>"},{"location":"getting-started/quick-start/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"Key Action <code>Space</code> Play/Pause <code>\u2190</code> Seek backward 10s <code>\u2192</code> Seek forward 10s <code>\u2191</code> Volume up <code>\u2193</code> Volume down <code>F</code> Toggle fullscreen <code>M</code> Mute/unmute"},{"location":"getting-started/quick-start/#troubleshooting-first-time-issues","title":"Troubleshooting First-Time Issues","text":""},{"location":"getting-started/quick-start/#cant-login","title":"Can't Login","text":"<ul> <li>Check container logs: <code>docker logs peek-stash-browser</code></li> <li>Verify database was created in <code>/app/data</code></li> <li>Ensure <code>JWT_SECRET</code> is set (or auto-generated)</li> </ul>"},{"location":"getting-started/quick-start/#no-scenes-showing","title":"No Scenes Showing","text":"<ul> <li>Check <code>STASH_URL</code> is correct</li> <li>Verify <code>STASH_API_KEY</code> is valid</li> <li>Test Stash connectivity from container:   <pre><code>docker exec peek-stash-browser curl http://your-stash:9999/graphql\n</code></pre></li> </ul>"},{"location":"getting-started/quick-start/#videos-wont-play","title":"Videos Won't Play","text":"<ul> <li>Verify media path is mounted correctly:   <pre><code>docker exec peek-stash-browser ls /app/media\n</code></pre></li> <li>Check path mapping configuration</li> <li>Ensure FFmpeg is installed (included in official image)</li> </ul>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<ul> <li>Full Configuration Guide</li> <li>Complete Troubleshooting</li> </ul>"},{"location":"getting-started/quick-start/#need-help","title":"Need Help?","text":"<ul> <li>Troubleshooting Guide</li> <li>GitHub Issues</li> <li>Stash Discord - #third-party-integrations channel</li> </ul>"},{"location":"reference/faq/","title":"Frequently Asked Questions","text":"<p>Common questions about Peek Stash Browser.</p>"},{"location":"reference/faq/#general","title":"General","text":""},{"location":"reference/faq/#what-is-peek","title":"What is Peek?","text":"<p>Peek is a modern web application for browsing and streaming Stash media content with real-time HLS transcoding. It provides a fast, responsive interface with adaptive quality streaming.</p>"},{"location":"reference/faq/#how-is-peek-different-from-stash","title":"How is Peek different from Stash?","text":"<p>Peek is a browser/player focused on video playback, while Stash is a comprehensive media organizer. Peek:</p> <ul> <li>Focuses on smooth video playback with adaptive streaming</li> <li>Provides a simplified, browsing-focused interface</li> <li>Uses real-time transcoding for universal compatibility</li> <li>Complements Stash rather than replacing it</li> </ul>"},{"location":"reference/faq/#does-peek-modify-my-stash-library","title":"Does Peek modify my Stash library?","text":"<p>No. Peek is read-only. It connects to Stash's GraphQL API to read data but never modifies your library, files, or metadata.</p>"},{"location":"reference/faq/#installation","title":"Installation","text":""},{"location":"reference/faq/#what-platforms-are-supported","title":"What platforms are supported?","text":"<ul> <li>unRAID: Community Applications or manual Docker install</li> <li>Docker: Any platform supporting Docker</li> <li>Development: Node.js 18+ on Windows/Mac/Linux</li> </ul>"},{"location":"reference/faq/#do-i-need-a-separate-database-server","title":"Do I need a separate database server?","text":"<p>No. Peek uses embedded SQLite. No PostgreSQL, MySQL, or other database server needed.</p>"},{"location":"reference/faq/#can-i-run-peek-and-stash-on-the-same-server","title":"Can I run Peek and Stash on the same server?","text":"<p>Yes. They run as separate containers and don't conflict.</p>"},{"location":"reference/faq/#video-playback","title":"Video Playback","text":""},{"location":"reference/faq/#why-does-transcoding-take-so-long","title":"Why does transcoding take so long?","text":"<p>Transcoding is CPU-intensive. Performance depends on:</p> <ul> <li>Server CPU power</li> <li>Storage I/O speed (SSD vs HDD vs network)</li> <li>Original video codec and resolution</li> <li>Target quality selected</li> </ul> <p>For best performance, use local SSD storage and allocate 2-4 CPU cores.</p>"},{"location":"reference/faq/#why-cant-i-play-videos-directly-without-transcoding","title":"Why can't I play videos directly without transcoding?","text":"<p>Direct play is planned but not yet implemented. Currently, all videos are transcoded to HLS for:</p> <ul> <li>Universal browser compatibility</li> <li>Adaptive quality switching</li> <li>Fast seeking with HLS segments</li> <li>Consistent playback experience</li> </ul>"},{"location":"reference/faq/#can-i-download-the-original-video-file","title":"Can I download the original video file?","text":"<p>Original file downloads are planned but not yet implemented. Currently, only transcoded HLS streams are available for playback.</p>"},{"location":"reference/faq/#configuration","title":"Configuration","text":""},{"location":"reference/faq/#where-are-my-settings-stored","title":"Where are my settings stored?","text":"<ul> <li>User preferences: SQLite database in <code>/app/data/peek-db.db</code></li> <li>Server config: Environment variables</li> <li>Temp files: <code>/app/data/hls-cache/</code> (auto-cleaned)</li> </ul>"},{"location":"reference/faq/#how-do-i-backup-my-data","title":"How do I backup my data?","text":"<pre><code># Backup SQLite database\ndocker exec peek-stash-browser sqlite3 /app/data/peek-db.db \".backup /app/data/backup.db\"\n\n# Copy backup out of container\ndocker cp peek-stash-browser:/app/data/backup.db ./peek-backup.db\n</code></pre>"},{"location":"reference/faq/#can-i-customize-the-theme","title":"Can I customize the theme?","text":"<p>Dark and light themes are built-in. Custom themes and color schemes are planned for a future release.</p>"},{"location":"reference/faq/#performance","title":"Performance","text":""},{"location":"reference/faq/#how-many-concurrent-streams-can-peek-handle","title":"How many concurrent streams can Peek handle?","text":"<p>Depends on server CPU:</p> <ul> <li>2 CPU cores: 1-2 streams at 720p</li> <li>4 CPU cores: 3-4 streams at 720p</li> <li>6+ CPU cores: 5+ streams at 720p</li> </ul> <p>Lower qualities (480p, 360p) require less CPU and support more concurrent streams.</p>"},{"location":"reference/faq/#why-is-my-media-loading-slowly","title":"Why is my media loading slowly?","text":"<p>Check storage speed:</p> <pre><code>docker exec peek-stash-browser dd if=/app/media/test.mp4 of=/dev/null bs=1M count=100\n</code></pre> <p>If &lt; 50 MB/s, media is likely on: - Network share (SMB/NFS) - Move to local storage - Slow HDD - Upgrade to SSD - USB drive - Use internal storage</p>"},{"location":"reference/faq/#how-much-disk-space-does-peek-need","title":"How much disk space does Peek need?","text":"<ul> <li>App data: ~100 MB (database, config)</li> <li>Temp files: ~50-100 MB per quality per minute of video</li> <li>Recommendation: 5-10 GB for temp storage on busy servers</li> </ul> <p>Temp files are automatically cleaned up after 30 minutes.</p>"},{"location":"reference/faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"reference/faq/#videos-wont-play","title":"Videos won't play","text":"<ol> <li>Check FFmpeg is installed: <code>docker exec peek-stash-browser ffmpeg -version</code></li> <li>Verify path mapping is correct</li> <li>Check file permissions on media</li> <li>Review backend logs for errors</li> </ol> <p>See: Troubleshooting Guide</p>"},{"location":"reference/faq/#cant-connect-to-stash","title":"Can't connect to Stash","text":"<ol> <li>Verify <code>STASH_URL</code> is correct and accessible from container</li> <li>Check Stash API key is valid</li> <li>Test connectivity: <code>docker exec peek-stash-browser curl http://stash:9999/graphql</code></li> </ol>"},{"location":"reference/faq/#login-doesnt-work","title":"Login doesn't work","text":"<ul> <li>Check cookies are enabled</li> <li>Verify <code>JWT_SECRET</code> is set</li> <li>Try incognito mode</li> <li>Clear browser cache</li> </ul>"},{"location":"reference/faq/#features","title":"Features","text":""},{"location":"reference/faq/#when-will-playlists-be-available","title":"When will playlists be available?","text":"<p>Playlists are planned for a future release. Track progress on GitHub Issues.</p>"},{"location":"reference/faq/#can-i-use-peek-on-mobile","title":"Can I use Peek on mobile?","text":"<p>Yes. The web interface is responsive and works on mobile browsers. A dedicated mobile app is not currently planned.</p>"},{"location":"reference/faq/#does-peek-support-hardware-transcoding","title":"Does Peek support hardware transcoding?","text":"<p>Not yet. Hardware-accelerated transcoding (GPU) is planned for a future release to improve performance and reduce CPU usage.</p>"},{"location":"reference/faq/#can-i-use-peek-without-stash","title":"Can I use Peek without Stash?","text":"<p>No. Peek requires a Stash server for media library management and metadata. Peek is designed as a companion to Stash, not a replacement.</p>"},{"location":"reference/faq/#security","title":"Security","text":""},{"location":"reference/faq/#is-peek-secure","title":"Is Peek secure?","text":"<p>Peek includes: - JWT authentication - Bcrypt password hashing - Read-only media access - Session management</p> <p>Important: Change the default admin password immediately!</p>"},{"location":"reference/faq/#should-i-expose-peek-to-the-internet","title":"Should I expose Peek to the internet?","text":"<p>No. Peek is designed for local network use. For remote access: - Use VPN - Use reverse proxy with authentication layer - Don't expose directly to internet</p>"},{"location":"reference/faq/#support","title":"Support","text":""},{"location":"reference/faq/#where-can-i-get-help","title":"Where can I get help?","text":"<ul> <li>Documentation: https://carrotwaxr.github.io/peek-stash-browser</li> <li>GitHub Issues: Bug reports and feature requests</li> <li>Stash Discord: #third-party-integrations channel</li> </ul>"},{"location":"reference/faq/#how-do-i-report-a-bug","title":"How do I report a bug?","text":"<ol> <li>Search existing issues first</li> <li>Gather logs and error messages</li> <li>Create detailed issue on GitHub</li> <li>Include: version, platform, steps to reproduce</li> </ol> <p>See: GitHub Issues</p>"},{"location":"reference/faq/#can-i-contribute","title":"Can I contribute?","text":"<p>Yes! Contributions are welcome: - Code improvements - Bug fixes - Documentation - Translations (future)</p> <p>See: GitHub Issues</p>"},{"location":"reference/faq/#next-steps","title":"Next Steps","text":"<ul> <li>Installation - Install Peek</li> <li>Troubleshooting - Fix common issues</li> </ul>"},{"location":"reference/theming/","title":"Theming Guide","text":"<p>Peek uses a comprehensive CSS variable system that allows complete customization of the visual appearance. This guide explains how themes work, what variables are available, and best practices for creating custom themes.</p>"},{"location":"reference/theming/#theme-architecture","title":"Theme Architecture","text":"<p>Peek's theme system is built on CSS Custom Properties (CSS Variables). Each theme defines ~60 variables that control every aspect of the UI's appearance.</p>"},{"location":"reference/theming/#current-themes","title":"Current Themes","text":"<p>Peek includes three built-in themes:</p> <ol> <li>Peek (Default) - Dark theme with purple accents</li> <li>Light - Clean light theme with blue accents</li> <li>Midnight - Pure black theme optimized for OLED displays</li> </ol>"},{"location":"reference/theming/#theme-file-structure","title":"Theme File Structure","text":"<p>Themes are defined in <code>client/src/themes/themes.js</code>:</p> <pre><code>export const themes = {\n  peek: {\n    name: \"Peek\",\n    properties: {\n      \"--bg-primary\": \"#0f0f0f\",\n      \"--text-primary\": \"#ffffff\",\n      // ... ~60 more variables\n    }\n  }\n};\n</code></pre>"},{"location":"reference/theming/#css-variable-reference","title":"CSS Variable Reference","text":""},{"location":"reference/theming/#base-colors","title":"Base Colors","text":"<p>These form the foundation of your theme's color palette.</p>"},{"location":"reference/theming/#background-colors","title":"Background Colors","text":"Variable Usage Recommendations <code>--bg-primary</code> Main page background Dark themes: Very dark (#0f0f0f to #1a1a1a)Light themes: Very light (#f5f5f5 to #ffffff) <code>--bg-secondary</code> Secondary backgrounds (sidebar, headers) Dark: Slightly lighter than primary (#1a1a1a to #2a2a2a)Light: Slightly darker than primary (#e5e5e5 to #f0f0f0) <code>--bg-tertiary</code> Tertiary backgrounds (disabled states, placeholders) Dark: Between secondary and card (#2a2a2a to #3a3a3a)Light: Between secondary and card (#d5d5d5 to #e0e0e0) <code>--bg-card</code> Cards, modals, dropdowns Dark: Lighter than primary for depth (#1f1f1f to #2f2f2f)Light: White or near-white (#ffffff to #fafafa) <p>Example Usage: - Scene cards, performer cards, playlists - Modals and dialogs - Dropdown menus - Input fields</p> <p>Contrast Tips: - Maintain clear hierarchy: primary \u2192 secondary \u2192 tertiary \u2192 card - Dark themes: Each level should be progressively lighter - Light themes: Each level should be progressively darker - Aim for subtle differences (10-20 points in hex values)</p>"},{"location":"reference/theming/#text-colors","title":"Text Colors","text":"Variable Usage Recommendations <code>--text-primary</code> Primary text, headings, important content Dark themes: Pure or near-white (#ffffff, #f5f5f5)Light themes: Very dark (#0f0f0f, #1a1a1a)Contrast ratio: 7:1 minimum against bg-primary <code>--text-secondary</code> Secondary text, subtitles, metadata Dark themes: Light gray (#b3b3b3 to #cccccc)Light themes: Dark gray (#4a4a4a to #666666)Contrast ratio: 4.5:1 minimum against bg-primary <code>--text-muted</code> Tertiary text, timestamps, less important info Dark themes: Medium gray (#808080 to #999999)Light themes: Medium-dark gray (#737373 to #8c8c8c)Contrast ratio: 3:1 minimum <p>Example Usage: - Headings, body text (primary) - Scene descriptions, performer counts (secondary) - File sizes, resolutions, timestamps (muted)</p> <p>Accessibility Notes: - WCAG AA requires 4.5:1 contrast for normal text, 3:1 for large text - WCAG AAA requires 7:1 contrast for normal text, 4.5:1 for large text - Test your colors at WebAIM Contrast Checker</p>"},{"location":"reference/theming/#border-colors","title":"Border Colors","text":"Variable Usage Recommendations <code>--border-color</code> Default borders (cards, inputs, dividers) Dark themes: Subtle gray (#404040 to #4a4a4a)Light themes: Light gray (#d0d0d0 to #e0e0e0)Should be visible but not dominating <code>--border-focus</code> Focused input borders Use your primary accent color or a brighter variantMust stand out from default borders <p>Example Usage: - Card outlines - Input field borders - Dividers between sections - Table borders</p>"},{"location":"reference/theming/#accent-colors","title":"Accent Colors","text":"<p>Accent colors provide visual interest and brand identity. Choose colors that complement your base palette.</p> Variable Usage Recommendations <code>--accent-primary</code> Primary actions, links, main brand color Choose a vibrant color that stands outDark themes: Bright, saturated colors (#3b82f6, #6D2CE3)Light themes: Slightly muted versionsContrast: Must be readable on both dark and light backgrounds <code>--accent-secondary</code> Secondary actions, alternative highlights Complementary to primaryDifferent hue but similar vibrancy <code>--accent-tertiary</code> Tertiary actions, subtle accents Can be analogous to primary <code>--accent-success</code> Success states, completion Green shades (#22c55e, #10b981) <code>--accent-warning</code> Warnings, caution states Yellow/orange (#eab308, #f59e0b) <code>--accent-error</code> Errors, destructive actions Red shades (#ef4444, #dc2626) <code>--accent-info</code> Informational states Blue shades (#3b82f6, #0ea5e9) <p>Example Usage: - Buttons, links (primary) - Tags, badges (secondary, tertiary) - Progress bars (success) - Error messages (error) - Warning dialogs (warning)</p>"},{"location":"reference/theming/#focus-selection-states","title":"Focus &amp; Selection States","text":"<p>These variables control how focused and selected elements appear. Critical for keyboard navigation and accessibility.</p> Variable Usage Recommendations <code>--focus-ring-color</code> Focus ring color for keyboard navigation Use <code>--accent-primary</code> or a bright accentMust be highly visible <code>--focus-ring-shadow</code> Focus ring shadow effect <code>0 0 0 3px rgba(your-color, 0.3)</code>Use your focus color with transparency <code>--selection-color</code> Selected item borders/highlights Usually same as <code>--focus-ring-color</code>Can be slightly different for distinction <code>--selection-bg</code> Selected item background tint Your selection color at low opacity<code>rgba(your-color, 0.1)</code> to <code>rgba(your-color, 0.2)</code> <p>Example Usage: - Keyboard-focused scene cards - Selected items in lists - Text selection highlighting - Active navigation items</p> <p>Accessibility Requirements: - Focus indicators must have 3:1 contrast against adjacent colors (WCAG 2.1) - Should be clearly visible without relying on color alone - Consider adding both color AND border weight changes</p>"},{"location":"reference/theming/#rating-gradient","title":"Rating Gradient","text":"<p>The rating system uses a 5-color gradient from bad (0-19) to excellent (80-100).</p> Variable Range Recommendations <code>--rating-bad</code> 0-19 Red (#ef4444, #dc2626) <code>--rating-poor</code> 20-39 Orange (#f97316, #ea580c) <code>--rating-average</code> 40-59 Yellow (#eab308, #facc15) <code>--rating-good</code> 60-79 Lime/yellow-green (#84cc16, #a3e635) <code>--rating-excellent</code> 80-100 Green (#22c55e, #10b981) <p>Example Usage: - Scene rating displays - Rating indicators on cards - Statistics and analytics</p> <p>Gradient Tips: - Use universally recognizable colors (red = bad, green = good) - Maintain consistent saturation across the gradient - Ensure all colors are readable on your backgrounds - Consider colorblind-friendly alternatives (use icons alongside colors)</p>"},{"location":"reference/theming/#icon-colors","title":"Icon Colors","text":"<p>Theme-aware colors for specific icon types. These provide semantic meaning through color.</p> Variable Usage Recommendations <code>--icon-o-counter</code> O counter icon (\ud83d\udca6) color Pink/magenta (#FD6B86, #ec4899)Playful, distinct from other icons <code>--icon-play-count</code> Play count icon (\u25b6) color Teal/cyan (#0F7173, #14b8a6)Media-related, distinct from o-counter <code>--icon-rating</code> Rating star icon color Orange/gold (#FA8C2A, #f59e0b)Traditional star color <code>--icon-organized</code> Organized checkmark (\u2713) color Green (#22c55e, #10b981)Positive confirmation <p>Example Usage: - Statistics on scene cards - Metadata displays - Scene detail pages</p> <p>Color Psychology: - Pink (o-counter): Playful, attention-grabbing - Teal (play count): Professional, media-related - Orange (rating): Warm, valuable - Green (organized): Complete, organized</p>"},{"location":"reference/theming/#status-states","title":"Status States","text":"<p>Status indicators for success, info, warning, and error states. Each has 3 variants for backgrounds, text, and borders.</p>"},{"location":"reference/theming/#success-states-green","title":"Success States (Green)","text":"Variable Usage Recommendations <code>--status-success-bg</code> Success notification/badge background Light green with transparency<code>rgba(34, 197, 94, 0.1)</code> for dark themes<code>rgba(34, 197, 94, 0.15)</code> for light themes <code>--status-success-text</code> Success message text Bright green (#22c55e) for dark themesDarker green (#16a34a) for light themes <code>--status-success-border</code> Success badge/notification border Medium green (#10b981) <p>Example Usage: - Upload success messages - Completion notifications - \"Organized\" badges</p>"},{"location":"reference/theming/#info-states-blue","title":"Info States (Blue)","text":"Variable Usage Recommendations <code>--status-info-bg</code> Info badge/notification background Light blue with transparency<code>rgba(59, 130, 246, 0.1)</code> <code>--status-info-text</code> Info message text Bright blue (#3b82f6) for darkDarker blue (#2563eb) for light <code>--status-info-border</code> Info badge border Medium blue (#0ea5e9) <p>Example Usage: - Performer/tag count badges - Informational tooltips - Help text</p>"},{"location":"reference/theming/#warning-states-yelloworange","title":"Warning States (Yellow/Orange)","text":"Variable Usage Recommendations <code>--status-warning-bg</code> Warning background Light yellow/orange with transparency<code>rgba(234, 179, 8, 0.1)</code> <code>--status-warning-text</code> Warning text Bright yellow (#eab308) for darkDarker orange (#ca8a04) for light <code>--status-warning-border</code> Warning border Medium orange (#f59e0b) <p>Example Usage: - Cautionary messages - Validation warnings - Deprecation notices</p>"},{"location":"reference/theming/#error-states-red","title":"Error States (Red)","text":"Variable Usage Recommendations <code>--status-error-bg</code> Error background Light red with transparency<code>rgba(239, 68, 68, 0.1)</code> <code>--status-error-text</code> Error message text Bright red (#ef4444) for darkDarker red (#dc2626) for light <code>--status-error-border</code> Error border Medium red (#f87171) <p>Example Usage: - Error messages - Failed operations - Validation errors</p>"},{"location":"reference/theming/#toast-notifications","title":"Toast Notifications","text":"<p>Toast notifications use enhanced versions of status colors with shadows for floating UI elements.</p> <p>Each toast type has 3 variants:</p> Variable Pattern Usage <code>--toast-{type}-bg</code> Toast background (usually solid, not transparent) <code>--toast-{type}-border</code> Toast border color <code>--toast-{type}-shadow</code> Toast drop shadow color (for depth) <p>Types: <code>success</code>, <code>info</code>, <code>warning</code>, <code>error</code></p> <p>Shadow Recommendations: <pre><code>/* Dark themes */\nbox-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.5),\n            0 8px 10px -6px rgba(0, 0, 0, 0.3);\n\n/* Light themes */\nbox-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1),\n            0 8px 10px -6px rgba(0, 0, 0, 0.1);\n</code></pre></p> <p>Example Toast Colors:</p> <pre><code>// Success Toast (Dark Theme)\n\"--toast-success-bg\": \"#10b981\",      // Solid green\n\"--toast-success-border\": \"#22c55e\",   // Lighter green\n\"--toast-success-shadow\": \"rgba(16, 185, 129, 0.5)\",\n\n// Error Toast (Dark Theme)\n\"--toast-error-bg\": \"#dc2626\",         // Solid red\n\"--toast-error-border\": \"#ef4444\",     // Lighter red\n\"--toast-error-shadow\": \"rgba(220, 38, 38, 0.5)\",\n</code></pre>"},{"location":"reference/theming/#role-badges","title":"Role Badges","text":"<p>User and admin role badge colors. Used in user management interfaces.</p>"},{"location":"reference/theming/#admin-role","title":"Admin Role","text":"Variable Usage Recommendations <code>--role-admin-bg</code> Admin badge background Purple/blue tint<code>rgba(139, 92, 246, 0.1)</code> <code>--role-admin-text</code> Admin badge text Bright purple (#8b5cf6) for darkDarker purple (#7c3aed) for light <code>--role-admin-border</code> Admin badge border Medium purple (#a78bfa)"},{"location":"reference/theming/#user-role","title":"User Role","text":"Variable Usage Recommendations <code>--role-user-bg</code> User badge background Gray/neutral tint<code>rgba(148, 163, 184, 0.1)</code> <code>--role-user-text</code> User badge text Light gray (#94a3b8) for darkDarker gray (#64748b) for light <code>--role-user-border</code> User badge border Medium gray (#cbd5e1) <p>Example Usage: - Settings &gt; User Management - User profile indicators - Permission displays</p>"},{"location":"reference/theming/#creating-custom-themes","title":"Creating Custom Themes","text":""},{"location":"reference/theming/#method-1-modify-built-in-themes-current","title":"Method 1: Modify Built-in Themes (Current)","text":"<p>Edit <code>client/src/themes/themes.js</code>:</p> <pre><code>export const themes = {\n  myTheme: {\n    name: \"My Custom Theme\",\n    properties: {\n      // Base colors\n      \"--bg-primary\": \"#1a1a2e\",\n      \"--bg-secondary\": \"#16213e\",\n      \"--bg-tertiary\": \"#0f3460\",\n      \"--bg-card\": \"#1f2a44\",\n\n      \"--text-primary\": \"#eaeaea\",\n      \"--text-secondary\": \"#b8b8b8\",\n      \"--text-muted\": \"#8c8c8c\",\n\n      // Accent colors\n      \"--accent-primary\": \"#00adb5\",\n      \"--accent-secondary\": \"#ff2e63\",\n      \"--accent-tertiary\": \"#ffa45b\",\n\n      // ... rest of variables\n    }\n  }\n};\n</code></pre>"},{"location":"reference/theming/#method-2-custom-theme-builder-ui-coming-soon","title":"Method 2: Custom Theme Builder UI (Coming Soon)","text":"<p>A visual theme builder will be added in a future update, allowing you to:</p> <ul> <li>Pick colors with a color picker</li> <li>Preview changes in real-time</li> <li>Export theme JSON</li> <li>Import community themes</li> </ul>"},{"location":"reference/theming/#theme-design-best-practices","title":"Theme Design Best Practices","text":""},{"location":"reference/theming/#1-start-with-base-colors","title":"1. Start with Base Colors","text":"<p>Choose your foundation first: 1. Background primary (darkest/lightest) 2. Text primary (highest contrast) 3. Accent primary (brand color)</p> <p>All other colors should harmonize with these three.</p>"},{"location":"reference/theming/#2-maintain-contrast-ratios","title":"2. Maintain Contrast Ratios","text":"<p>Use tools to verify accessibility:</p> <ul> <li>WebAIM Contrast Checker</li> <li>Coolors Contrast Checker</li> <li>Chrome DevTools Accessibility Panel</li> </ul> <p>Minimum ratios: - Large text (18pt+): 3:1 - Normal text: 4.5:1 - Interactive elements: 3:1 (WCAG 2.1)</p>"},{"location":"reference/theming/#3-test-across-components","title":"3. Test Across Components","text":"<p>Preview your theme on: - Scene grids (card density) - Video player (dark overlay backgrounds) - Forms and inputs (readability) - Modals and dialogs (depth perception) - Toasts and notifications (visibility)</p>"},{"location":"reference/theming/#4-consider-color-blindness","title":"4. Consider Color Blindness","text":"<p>Protanopia/Deuteranopia (red-green): - Don't rely solely on red/green for ratings - Use red/blue or red/yellow combinations - Add icons alongside color indicators</p> <p>Tritanopia (blue-yellow): - Avoid blue/yellow exclusive distinctions - Use red/green or blue/red combinations</p> <p>Test your theme: - Coblis Color Blindness Simulator - Chrome DevTools Vision Deficiency Emulation</p>"},{"location":"reference/theming/#5-dark-theme-considerations","title":"5. Dark Theme Considerations","text":"<p>Backgrounds: - Avoid pure black (#000000) - causes eye strain - Use near-black (#0f0f0f to #1a1a1a) - OLED themes: Pure black is okay (saves power)</p> <p>Text: - Avoid pure white (#ffffff) on dark backgrounds - Use off-white (#f5f5f5, #eaeaea) - Reduces eye strain and glare</p> <p>Colors: - Desaturate bright colors slightly (reduce vibrancy by 10-20%) - Bright saturated colors cause halation on dark backgrounds</p>"},{"location":"reference/theming/#6-light-theme-considerations","title":"6. Light Theme Considerations","text":"<p>Backgrounds: - Use off-white or very light gray (#f5f5f5 to #fafafa) - Pure white (#ffffff) works but can be harsh - Add subtle warmth (slight beige tint) for comfort</p> <p>Text: - Use very dark gray (#1a1a1a) instead of pure black - Pure black can appear too harsh</p> <p>Colors: - Can use fuller saturation than dark themes - Ensure colors don't appear washed out</p>"},{"location":"reference/theming/#7-spacing-hierarchy","title":"7. Spacing &amp; Hierarchy","text":"<p>While not directly theme-related, consider:</p> <ul> <li>Card shadows: Lighter in light themes, heavier in dark themes</li> <li>Borders: Subtle in dark themes, more pronounced in light themes</li> <li>Focus indicators: Always visible regardless of theme</li> </ul>"},{"location":"reference/theming/#color-palette-generators","title":"Color Palette Generators","text":"<p>Tools to help create harmonious themes:</p> <ul> <li>Coolors - Generate color schemes</li> <li>Adobe Color - Color wheel and harmony rules</li> <li>Paletton - Advanced palette generator</li> <li>Material Design Color Tool - Accessibility-focused</li> <li>Realtime Colors - Preview colors on UI mockups</li> </ul>"},{"location":"reference/theming/#example-creating-a-forest-theme","title":"Example: Creating a \"Forest\" Theme","text":"<p>Let's create a nature-inspired dark theme:</p> <pre><code>forest: {\n  name: \"Forest\",\n  properties: {\n    // Base - Dark greens and browns\n    \"--bg-primary\": \"#0d1b0e\",           // Very dark green-black\n    \"--bg-secondary\": \"#1a2e1c\",         // Dark forest green\n    \"--bg-tertiary\": \"#2a4029\",          // Medium forest green\n    \"--bg-card\": \"#1f3320\",              // Card green\n\n    // Text - Off-white with slight green tint\n    \"--text-primary\": \"#e8f5e9\",         // Very light green-white\n    \"--text-secondary\": \"#a5d6a7\",       // Light green-gray\n    \"--text-muted\": \"#66bb6a\",           // Muted green\n\n    // Borders - Subtle green-gray\n    \"--border-color\": \"#2e4a2e\",\n    \"--border-focus\": \"#4caf50\",\n\n    // Accents - Vibrant natural colors\n    \"--accent-primary\": \"#4caf50\",       // Bright green (leaves)\n    \"--accent-secondary\": \"#ff9800\",     // Orange (sunset)\n    \"--accent-tertiary\": \"#8d6e63\",      // Brown (bark)\n    \"--accent-success\": \"#66bb6a\",\n    \"--accent-warning\": \"#ffb74d\",\n    \"--accent-error\": \"#e57373\",\n    \"--accent-info\": \"#64b5f6\",\n\n    // Focus &amp; Selection - Bright green\n    \"--focus-ring-color\": \"#4caf50\",\n    \"--focus-ring-shadow\": \"0 0 0 3px rgba(76, 175, 80, 0.3)\",\n    \"--selection-color\": \"#4caf50\",\n    \"--selection-bg\": \"rgba(76, 175, 80, 0.1)\",\n\n    // Rating - Nature-inspired gradient\n    \"--rating-excellent\": \"#4caf50\",     // Vibrant green\n    \"--rating-good\": \"#8bc34a\",          // Light green\n    \"--rating-average\": \"#fdd835\",       // Golden yellow\n    \"--rating-poor\": \"#ff9800\",          // Orange\n    \"--rating-bad\": \"#f44336\",           // Red\n\n    // Icons - Earthy tones\n    \"--icon-o-counter\": \"#ff9800\",       // Warm orange\n    \"--icon-play-count\": \"#00bcd4\",      // Water blue\n    \"--icon-rating\": \"#fdd835\",          // Golden\n    \"--icon-organized\": \"#66bb6a\",       // Leaf green\n\n    // Status states (keep standard colors for familiarity)\n    \"--status-success-bg\": \"rgba(102, 187, 106, 0.1)\",\n    \"--status-success-text\": \"#66bb6a\",\n    \"--status-success-border\": \"#4caf50\",\n    // ... etc\n  }\n}\n</code></pre>"},{"location":"reference/theming/#testing-your-theme","title":"Testing Your Theme","text":""},{"location":"reference/theming/#browser-devtools","title":"Browser DevTools","text":"<p>Test theme variables in real-time:</p> <ol> <li>Open DevTools (F12)</li> <li>Select an element</li> <li>In Styles panel, edit CSS variables:    <pre><code>:root {\n  --accent-primary: #ff00ff; /* Test new color */\n}\n</code></pre></li> <li>See changes immediately</li> </ol>"},{"location":"reference/theming/#component-checklist","title":"Component Checklist","text":"<p>Test your theme on these key components:</p> <ul> <li> Home page with scene carousels</li> <li> Scene grid view</li> <li> Scene detail page</li> <li> Video player controls</li> <li> Search and filters</li> <li> Playlists</li> <li> Settings pages</li> <li> Login screen</li> <li> Modals and dialogs</li> <li> Toast notifications</li> <li> Form inputs</li> <li> Buttons (all states: normal, hover, focus, disabled)</li> <li> Cards (scene, performer, studio, tag)</li> <li> Navigation (sidebar, breadcrumbs)</li> </ul>"},{"location":"reference/theming/#sharing-custom-themes","title":"Sharing Custom Themes","text":"<p>Once the Custom Theme Builder UI is available, you'll be able to:</p> <ol> <li>Export your theme as JSON</li> <li>Share on GitHub Discussions or Discord</li> <li>Import community themes with one click</li> </ol> <p>Example export:</p> <pre><code>{\n  \"name\": \"Forest\",\n  \"author\": \"YourUsername\",\n  \"version\": \"1.0.0\",\n  \"properties\": {\n    \"--bg-primary\": \"#0d1b0e\",\n    ...\n  }\n}\n</code></pre>"},{"location":"reference/theming/#troubleshooting","title":"Troubleshooting","text":""},{"location":"reference/theming/#colors-not-applying","title":"Colors not applying","text":"<p>Check: - Variable names are spelled correctly (case-sensitive) - Variables are defined in theme object - Theme is selected in Settings</p>"},{"location":"reference/theming/#low-contrast-warnings","title":"Low contrast warnings","text":"<p>Fix: - Use a contrast checker tool - Lighten text colors on dark backgrounds - Darken text colors on light backgrounds - Avoid mid-tone grays</p>"},{"location":"reference/theming/#theme-flashing-on-load","title":"Theme flashing on load","text":"<p>Normal behavior: - Theme loads from localStorage after initial render - Brief flash of default theme is expected - Will be optimized in future updates</p>"},{"location":"reference/theming/#future-enhancements","title":"Future Enhancements","text":"<p>Planned theme system improvements:</p> <ul> <li>Visual Theme Builder - GUI for creating custom themes</li> <li>Theme Marketplace - Browse and download community themes</li> <li>Per-Page Themes - Different themes for video player, grids, etc.</li> <li>Dynamic Theming - Theme changes based on time of day</li> <li>Theme Presets - One-click theme templates (Cyberpunk, Pastel, etc.)</li> <li>Import/Export - Share themes via JSON files</li> <li>CSS Variable Inspector - Visualize all theme variables in DevTools panel</li> </ul>"},{"location":"reference/theming/#contributing-themes","title":"Contributing Themes","text":"<p>Want to contribute a theme to Peek's built-in collection?</p> <ol> <li>Create your theme following this guide</li> <li>Test thoroughly across all components</li> <li>Verify accessibility (WCAG AA minimum)</li> <li>Open a Pull Request on GitHub with:</li> <li>Theme definition in <code>themes.js</code></li> <li>Screenshot showcase</li> <li>Description and inspiration</li> <li>Accessibility test results</li> </ol> <p>We especially welcome: - High-contrast themes - Colorblind-friendly themes - Culturally-inspired themes - Minimalist themes - Retro/vintage themes</p> <p>Happy theming! \ud83c\udfa8</p>"},{"location":"reference/troubleshooting/","title":"Troubleshooting","text":"<p>Common issues and solutions for Peek Stash Browser.</p>"},{"location":"reference/troubleshooting/#installation-setup","title":"Installation &amp; Setup","text":""},{"location":"reference/troubleshooting/#container-wont-start","title":"Container Won't Start","text":"<p>Check logs first: <pre><code>docker logs peek-stash-browser\n</code></pre></p> <p>Common causes: - Missing required environment variables (<code>STASH_URL</code>, <code>STASH_API_KEY</code>) - Invalid <code>STASH_URL</code> (not accessible from container) - Port conflicts (6969 already in use) - Missing volume mappings</p> <p>Solution: <pre><code># Stop container\ndocker stop peek-stash-browser\n\n# Remove container\ndocker rm peek-stash-browser\n\n# Recreate with correct configuration\n# (use your template or docker-compose)\n</code></pre></p>"},{"location":"reference/troubleshooting/#cant-connect-to-stash","title":"Can't Connect to Stash","text":"<p>Test connectivity from container: <pre><code>docker exec peek-stash-browser curl http://your-stash-ip:9999/graphql\n</code></pre></p> <p>Solutions: - Verify <code>STASH_URL</code> is correct and accessible - Check Stash API key is valid (Settings \u2192 Security \u2192 API Key) - Ensure Stash GraphQL endpoint is enabled - Check firewall rules between containers</p>"},{"location":"reference/troubleshooting/#video-playback","title":"Video Playback","text":""},{"location":"reference/troubleshooting/#videos-wont-play","title":"Videos Won't Play","text":"<ol> <li>Check FFmpeg: <code>docker exec peek-stash-browser ffmpeg -version</code></li> <li>Check file permissions: <code>docker exec peek-stash-browser ls -la /app/media</code></li> <li>Verify path mapping: Check <code>STASH_INTERNAL_PATH</code> and <code>STASH_MEDIA_PATH</code></li> <li>Check backend logs: <code>docker logs peek-stash-browser</code></li> </ol>"},{"location":"reference/troubleshooting/#slow-transcoding","title":"Slow Transcoding","text":"<p>Check I/O performance: <pre><code>docker exec peek-stash-browser dd if=/app/media/test.mp4 of=/dev/null bs=1M count=100\n</code></pre></p> <p>Expected: 50+ MB/s for good performance</p> <p>Solutions: - Move media to local storage (not network share) - Use SSD for media and temp files - Reduce quality preset - Allocate more CPU to container</p>"},{"location":"reference/troubleshooting/#authentication","title":"Authentication","text":""},{"location":"reference/troubleshooting/#cant-login","title":"Can't Login","text":"<ul> <li>Verify username/password</li> <li>Check if cookies are enabled in browser</li> <li>Clear browser cache and cookies</li> <li>Try incognito/private browsing mode</li> </ul>"},{"location":"reference/troubleshooting/#session-expires-immediately","title":"Session Expires Immediately","text":"<ul> <li>Check <code>JWT_SECRET</code> is set</li> <li>Verify <code>SECURE_COOKIES</code> matches your setup (false for HTTP)</li> <li>Clear browser cookies</li> <li>Check system clock is correct</li> </ul>"},{"location":"reference/troubleshooting/#network-performance","title":"Network &amp; Performance","text":""},{"location":"reference/troubleshooting/#slow-page-loading","title":"Slow Page Loading","text":"<ul> <li>Check server CPU/memory usage</li> <li>Clear browser cache</li> <li>Verify network speed</li> <li>Check for console errors (F12 \u2192 Console)</li> </ul>"},{"location":"reference/troubleshooting/#images-not-loading","title":"Images Not Loading","text":"<ul> <li>Check Stash is accessible</li> <li>Verify <code>STASH_URL</code> is correct</li> <li>Check browser console for CORS errors</li> <li>Try clearing cache</li> </ul>"},{"location":"reference/troubleshooting/#database","title":"Database","text":""},{"location":"reference/troubleshooting/#database-locked-error","title":"Database Locked Error","text":"<pre><code># Stop container\ndocker stop peek-stash-browser\n\n# Remove lock file\ndocker run --rm -v peek-data:/app/data busybox rm /app/data/peek-db.db-wal\n\n# Restart container\ndocker start peek-stash-browser\n</code></pre>"},{"location":"reference/troubleshooting/#reset-database","title":"Reset Database","text":"<p>This Deletes All Data</p> <p>This will delete all users, preferences, and playlists.</p> <pre><code>docker stop peek-stash-browser\ndocker run --rm -v peek-data:/app/data busybox rm /app/data/peek-db.db\ndocker start peek-stash-browser\n</code></pre>"},{"location":"reference/troubleshooting/#logs-debugging","title":"Logs &amp; Debugging","text":""},{"location":"reference/troubleshooting/#viewing-logs","title":"Viewing Logs","text":"<pre><code># All logs\ndocker logs peek-stash-browser\n\n# Follow logs (live)\ndocker logs -f peek-stash-browser\n\n# Last 100 lines\ndocker logs --tail 100 peek-stash-browser\n</code></pre>"},{"location":"reference/troubleshooting/#enable-debug-logging","title":"Enable Debug Logging","text":"<p>Add to environment variables: <pre><code>LOG_LEVEL=debug\n</code></pre></p>"},{"location":"reference/troubleshooting/#browser-console","title":"Browser Console","text":"<p>Check browser console for frontend errors:</p> <ol> <li>Press F12 to open DevTools</li> <li>Click Console tab</li> <li>Look for red errors</li> <li>Copy error messages when reporting issues</li> </ol>"},{"location":"reference/troubleshooting/#common-error-messages","title":"Common Error Messages","text":""},{"location":"reference/troubleshooting/#ffmpeg-not-found","title":"\"FFmpeg not found\"","text":"<p>Solution: Rebuild container or verify FFmpeg is installed in image</p>"},{"location":"reference/troubleshooting/#path-translation-failed","title":"\"Path translation failed\"","text":"<p>Solution: Check <code>STASH_INTERNAL_PATH</code> and <code>STASH_MEDIA_PATH</code> environment variables</p>"},{"location":"reference/troubleshooting/#session-not-found","title":"\"Session not found\"","text":"<p>Solution: Session expired (30 min timeout). Refresh page and try again.</p>"},{"location":"reference/troubleshooting/#unauthorized","title":"\"Unauthorized\"","text":"<p>Solution: Token expired. Logout and login again.</p>"},{"location":"reference/troubleshooting/#getting-help","title":"Getting Help","text":""},{"location":"reference/troubleshooting/#before-asking-for-help","title":"Before Asking for Help","text":"<ol> <li>Check this troubleshooting guide</li> <li>Search existing GitHub Issues</li> <li>Check browser console for errors</li> <li>Gather logs and error messages</li> </ol>"},{"location":"reference/troubleshooting/#creating-a-bug-report","title":"Creating a Bug Report","text":"<p>Include:</p> <ul> <li>Peek version: Check Settings \u2192 About</li> <li>Platform: unRAID / Docker / Development</li> <li>Browser: Chrome 120 / Firefox 121 / etc.</li> <li>Stash version: Your Stash server version</li> <li>Error logs: Backend and browser console</li> <li>Steps to reproduce: Detailed steps</li> <li>Screenshots: If applicable</li> </ul>"},{"location":"reference/troubleshooting/#where-to-get-help","title":"Where to Get Help","text":"<ul> <li>GitHub Issues: https://github.com/carrotwaxr/peek-stash-browser/issues</li> <li>Stash Discord: #third-party-integrations channel</li> <li>Documentation: https://carrotwaxr.github.io/peek-stash-browser</li> </ul>"},{"location":"reference/troubleshooting/#next-steps","title":"Next Steps","text":"<ul> <li>FAQ - Frequently asked questions</li> </ul>"}]}